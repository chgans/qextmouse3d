/****************************************************************************
**
** Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt3D module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example teapot
    \title Teapot Example

    The Teapot example shows how Qt/3D can be used to draw a simple
    teapot object with a perspective camera view.

    We start by defining a class that inherits from QGLView, which
    provides some basic scene setup logic and 3D camera navigation:

    \snippet teapot/teapotview.h class-defn
    \dots
    \quotefromfile teapot/main.cpp
    \skipuntil [main]
    \printto [main-args]
    \skipuntil [main-args-end]
    \printto [main]

    The \c{teapot} member variable is an instance of QGLTeapot.
    This will load the standard geometry into main memory in
    preparation for later drawing operations.

    When the application starts up, we set up some scene parameters
    in the \c{initializeGL()} function:

    \quotefromfile teapot/teapotview.cpp
    \skipuntil [initialize]
    \printto [upload]
    \skipuntil [upload-end]
    \printto [initialize]

    The first line turns on light 0 using the default settings from
    QGLLightParameters.  The second line selects a standard rendering
    effect that lights material colors with the default OpenGL
    two-sided lighting algorithm.

    Finally, we paint the teapot every time the window is refreshed:

    \snippet teapot/teapotview.cpp paint

    The teapot is a very complex object with thousands of triangles
    along its surface.  The QGLTeapot class will optimize drawing
    by uploading the geometry to the GL server as a vertex buffer the
    first time it is drawn.  In some applications, you may want to
    upload the geometry ahead of time so that the performance of
    the first paint is not affected.  The geometry can be uploaded
    ahead of time by calling QGLGeometry::upload() in \c{initializeGL()}:

    \snippet teapot/teapotview.cpp initialize

    The QGLView class has in-built support for camera navigation
    using the mouse and keyboard.  By clicking and dragging the mouse,
    the teapot can be rotated into any position.  The image on the
    left shows the view in its startup default position, and the
    image on the right shows the view after rotation using the mouse:

    \raw HTML
    <center><table><tr><td>
    \endraw
    \image teapot-screenshot.png
    \raw HTML
    </td><td>
    \endraw
    \image teapot-rotated.png
    \raw HTML
    </td></tr></table></center>
    \endraw

    \l{qt3d-examples.html}{Return to Examples},
    \l{qt3d-tutorials.html}{Return to Tutorials}.
*/
