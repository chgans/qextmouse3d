/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt3D module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page index.html
    \title Qt/3D Reference Documentation
    \keyword Qt/3D Reference Documentation

    Qt/3D is a set of extension classes for the Qt OpenGL module to
    enhance the use of OpenGL in Qt 4.6 and higher.  There are a number
    of aspects to the library:

    \list
    \o \l{Qt/3D Math}{\bold{Math}} provides mathematical primitives for 3D.
    \o \l{Qt/3D Enablers}{\bold{Enablers}} provides wrappers for OpenGL
        extensions such as shaders, vertex buffers, etc.
    \o \l{Qt/3D Painting}{\bold{Painting}} makes it easier to perform
        OpenGL painting operations in a cross-platform manner.
    \o \l{Qt/3D Geometry}{\bold{Geometry}} provides storage and management
        of geometric objects, together with some reference objects.
    \o \l{Qt/3D Viewing}{\bold{Viewing}} provides widgets to simplify
        viewing objects in 3D.
    \o \l{Qt/3D Scene Management}{\bold{Scene Management}} provides
        simple scene management classes that make it easy to import
        3D objects from external file formats.
    \endlist

    Porting between desktop OpenGL and embedded OpenGL/ES has traditionally
    been difficult.  Desktop OpenGL, OpenGL/ES 1.1, and OpenGL/ES 2.0 use
    different function names, and shaders versus fixed function pipelines.
    Writing a single OpenGL application that runs on all platforms
    is quite difficult, even for simple objects.
    
    The tutorial "\l{Converting raw GL applications to use QGLPainter}"
    demonstrates how Qt/3D can be used to write truly portable OpenGL
    applications in Qt.

    \raw HTML
        <table cellpadding="2" cellspacing="1" border="0" width="100%" bgcolor="#e5e5e5">
        <tr>
        <th bgcolor="#66b036" width="33%">
        Getting Started
        </th>
        <th bgcolor="#66b036" width="33%">
        API Reference
        </th>
        </tr>
        <tr>
        <td valign="top">
        <ul>
        <li><a href="qt3d-building.html">Building</a></li>
        <li><a href="qt3d-tutorials.html">Tutorials</a></li>
        <li><a href="qt3d-examples.html">Examples</a></li>
        <li><a href="qt3d-demos.html">Demos</a></li>
        <li><a href="qt3d-contrib.html">Contributing</a></li>
        </ul>
        </td>
        <td valign="top">
        <ul>
        <li><a href="qt3d-all-classes.html">All Classes</a></li>
        <li><a href="qt3d-math.html">Math Classes</a></li>
        <li><a href="qt3d-enablers.html">Enabler Classes</a></li>
        <li><a href="qt3d-painting.html">Painting Classes</a></li>
        <li><a href="qt3d-geometry.html">Geometry Classes</a></li>
        <li><a href="qt3d-viewing.html">Viewing Classes</a></li>
        <li><a href="qt3d-scene.html">Scene Management Classes</a></li>
        <li><a href="qt3d-graphicsview.html">Graphics View Integration Classes</a></li>
        <li><a href="qgl.html">QGL Namespace</a></li>
        </ul>
        </td>
        </tr>
        </table>
    \endraw
*/
